"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import creditdocumentmetadata as shared_creditdocumentmetadata
from ..shared import creditpaystubdeductions as shared_creditpaystubdeductions
from ..shared import creditpaystubearnings as shared_creditpaystubearnings
from ..shared import creditpaystubemployee as shared_creditpaystubemployee
from ..shared import creditpaystubemployer as shared_creditpaystubemployer
from ..shared import creditpaystubnetpay as shared_creditpaystubnetpay
from ..shared import paystubpayperioddetails as shared_paystubpayperioddetails
from dataclasses_json import Undefined, dataclass_json
from test_plaid import utils
from typing import Any, Dict, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreditPayStub:
    r"""An object representing an end user's pay stub."""
    deductions: shared_creditpaystubdeductions.CreditPayStubDeductions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deductions') }})
    r"""An object with the deduction information found on a pay stub."""
    document_id: Optional[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document_id') }})
    r"""An identifier of the document referenced by the document metadata."""
    document_metadata: shared_creditdocumentmetadata.CreditDocumentMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document_metadata') }})
    r"""Object representing metadata pertaining to the document."""
    earnings: shared_creditpaystubearnings.CreditPayStubEarnings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('earnings') }})
    r"""An object representing both a breakdown of earnings on a pay stub and the total earnings."""
    employee: shared_creditpaystubemployee.CreditPayStubEmployee = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee') }})
    r"""Data about the employee."""
    employer: shared_creditpaystubemployer.CreditPayStubEmployer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employer') }})
    r"""Information about the employer on the pay stub."""
    net_pay: shared_creditpaystubnetpay.CreditPayStubNetPay = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net_pay') }})
    r"""An object representing information about the net pay amount on the pay stub."""
    pay_period_details: shared_paystubpayperioddetails.PayStubPayPeriodDetails = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pay_period_details') }})
    r"""Details about the pay period."""
    additional_properties: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'exclude': lambda f: f is None }})
    

